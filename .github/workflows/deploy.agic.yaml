name: Setup & Deploy AGIC

on:
  workflow_dispatch:
    inputs:
      aks_resource_group:
        description: 'AKS Resource Group'
        default: 'aniketdevops'
        required: true
      aks_name:
        description: 'AKS Cluster Name'
        required: true
      appgw_id:
        description: 'Application Gateway ID'
        required: true
      appgw_uai_name:
        description: 'Application Gateway UAI Name'
        required: true
      agic_namespace:
        description: 'AGIC Namespace'
        required: true
      agic_sa_name:
        description: 'AGIC Service Account Name'
        required: true

permissions:
  contents: read

jobs:
  deploy-agic:
    runs-on: ubuntu-latest

    env:
      AKS_RESOURCE_GROUP:    ${{ github.event.inputs.aks_resource_group }}
      AKS_CLUSTER_NAME:      ${{ github.event.inputs.aks_name }}
      APPGW_ID:              ${{ github.event.inputs.appgw_id }}
      IDENTITY_NAME:         ${{ github.event.inputs.appgw_uai_name }}
      AGIC_NAMESPACE:        ${{ github.event.inputs.agic_namespace }}
      AGIC_SERVICE_ACCOUNT:  ${{ github.event.inputs.agic_sa_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register AKS & Network Providers
        run: |
          az provider register --namespace Microsoft.ContainerService
          az provider register --namespace Microsoft.Network

      - name: Enable OIDC & Workload Identity on AKS
        run: |
          az aks update \
            -g ${{ env.AKS_RESOURCE_GROUP }} \
            -n ${{ env.AKS_CLUSTER_NAME }} \
            --enable-oidc-issuer \
            --enable-workload-identity

      - name: Fetch existing UAI details
        run: |
          echo "IDENTITY_CLIENT_ID=$(az identity show \
            -g ${{ env.AKS_RESOURCE_GROUP }} \
            -n ${{ env.IDENTITY_NAME }} \
            --query clientId -o tsv)" >> $GITHUB_ENV
          echo "IDENTITY_PRINCIPAL_ID=$(az identity show \
            -g ${{ env.AKS_RESOURCE_GROUP }} \
            -n ${{ env.IDENTITY_NAME }} \
            --query principalId -o tsv)" >> $GITHUB_ENV

      - name: Create Federated Credential for AGIC
        run: |
          AKS_OIDC_ISSUER=$(az aks show \
            -g ${{ env.AKS_RESOURCE_GROUP }} \
            -n ${{ env.AKS_CLUSTER_NAME }} \
            --query "oidcIssuerProfile.issuerUrl" -o tsv)

          az identity federated-credential create \
            --name "agic-${{ env.IDENTITY_NAME }}" \
            --identity-name ${{ env.IDENTITY_NAME }} \
            --resource-group ${{ env.AKS_RESOURCE_GROUP }} \
            --issuer $AKS_OIDC_ISSUER \
            --subject "system:serviceaccount:${{ env.AGIC_NAMESPACE }}:${{ env.AGIC_SERVICE_ACCOUNT }}"

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get AKS Credentials
        run: az aks get-credentials \
              --resource-group ${{ env.AKS_RESOURCE_GROUP }} \
              --name ${{ env.AKS_CLUSTER_NAME }} \
              --overwrite-existing

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Install or Upgrade AGIC
        run: |
          helm repo update

          if helm status ingress-azure -n ${{ env.AGIC_NAMESPACE }} &>/dev/null; then
            helm upgrade ingress-azure \
              oci://mcr.microsoft.com/azure-application-gateway/charts/ingress-azure \
              --namespace ${{ env.AGIC_NAMESPACE }} \
              --set appgw.applicationGatewayID=${{ env.APPGW_ID }} \
              --set armAuth.type=workloadIdentity \
              --set armAuth.identityClientID=${{ env.IDENTITY_CLIENT_ID }} \
              --set rbac.enabled=true
          else
            helm install ingress-azure \
              oci://mcr.microsoft.com/azure-application-gateway/charts/ingress-azure \
              --namespace ${{ env.AGIC_NAMESPACE }} \
              --create-namespace \
              --set appgw.applicationGatewayID=${{ env.APPGW_ID }} \
              --set armAuth.type=workloadIdentity \
              --set armAuth.identityClientID=${{ env.IDENTITY_CLIENT_ID }} \
              --set rbac.enabled=true
          fi
